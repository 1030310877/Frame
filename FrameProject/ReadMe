框架使用说明：
	该框架集成使用了如下第三方库：
	1.SweetDialog（对话框）、Progresswheel（圆形进度条）、nineoldandroids.jar（动画兼容包）
	2.ResideMenu（侧滑菜单）
	3.android-async-http-1.4.8.jar（异步网络请求）
	4.androidEventBus（事件订阅处理）
	5.一些工具类
	以上库均已进行简单集成，也可脱离框架独立使用。
	
更新：
	1.添加流式线性布局和竖型Viewpager。
	2.添加最基础的注解绑定View功能。
	3.封装了Webview，可使用WebViewType进行快速配置。
	
Activity：FrameBaseActivity
	使用时继承FrameBaseActivity。入口方法为onMyActivityCreated()。
	使用replaceFragment()或者setMyContentView()来设置显示内容。
	可使用注解形式替代findViewById：
			@ViewInject(R.id.xxx)
			private Button btn;
					||
			btn=(Button)findViewById(R.id.xxx);
	
	Toolbar：
		使用Toolbar代替Actionbar。通过hideToolbar和showToolbar控制Toolbar的显示隐藏（默认显示），通过getToolbar获取Toolbar对象。Toolbar用法，自行百度。
		要设置使用Toolbar右上角的菜单，重写onCreateMyToolbarMenu()方法，实现方式同原生的onCreateOptionsMenu()。菜单点击事件获取在onMyToolbarMenuItemClicked()中，通过item的id进行判断。
	
	侧滑菜单ResideMenu：
		使用initResideMenu()进行初始化设置并返回ResideMenu对象。也可使用getResideMenu()获得ResideMenu对象（如果之前未调用initResideMenu，那么将会进行默认初始化）。
		侧滑菜单分为两部分：菜单头和菜单项。添加菜单头可以添加任意View，使用residemenu.addMenuHeader(View)方法添加；菜单项为ResideMenuItem对象，直接使用addMenuItemToMenu()或addMenuItemsToMenu()添加。
		使用侧滑菜单后，默认界面的所有左右滑动会触发菜单开关，其他组件不能接受滑动事件。如果有滑动列表或其他需要接收滑动事件，则使用addIgnoredView()，将其添加。添加后，在该View上的滑动事件不会打开菜单。
	
	AndroidEventBus：
		直接使用registerEventBus注册即可,注册后会自动在onDestroy中注销。
		使用方法不同于EventBus，使用注解进行事件判定。详细使用自行百度。
		
Fragment: FrameBaseFragment
	使用时继承FragmentBaseFragment。入口方法为onMyFragmentCreate()。
	使用setMyContentView()设置显示内容。replaceFragment()将会replace新的Fragment取代自己。
	使用findViewById或注解@ViewInject可以获取到内容中的组件。
	
	Toolbar：
		要使用Toolbar，可使用context.getToolbar获取到对象。
		Toolbar的菜单，重写onCreateMyToolbarMenu和onMyToolbarMenuItemClicked。根据需要进行menu.clear()，不然会和activity的菜单进行叠加，一起显示。
		
	AndroidEventBus：
		直接使用registerEventBus注册即可,注册后会自动在onDestroy中注销。


常用工具类：
	HttpUtils： 使用原生API进行http异步请求。
	
	AsyncHttpUtils:	简单再封装android-async-http库
		使用doHttpRequestForXXXX的方法进行不同返回值的请求，具体查看该类源代码。
		参数类RequestParams使用put(key,value)添加参数。也可添加对象类型参数。
	
	LogUtils： 日志记录类
		使用时，更改其中isDebug为true，TAG为所需标识。
		LogUtils.d	LogUtils.i	LogUtils.e	LogUtils.v
		
	ToastUtils:	吐司类
		对Toast类进行简单封装。
